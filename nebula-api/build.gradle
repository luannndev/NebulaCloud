buildscript {
    repositories {
        mavenLocal()
    }
}

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.luan.cloud'
version = '1.0-FLUORINE-dev'
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.jline:jline:3.21.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation group: 'io.netty', name: 'netty-all', version: '4.1.79.Final'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

    compileOnly fileTree(dir: '../nebula-framework/build/libs', include: '*.jar')
}

shadowJar {
    archiveFileName.set("nebula-api.jar")
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}